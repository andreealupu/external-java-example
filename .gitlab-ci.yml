# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: maven:latest

stages:
  - build
  - test
  - visualize
  - deploy

include:
  - template: Jobs/Build.gitlab-ci.yml
#  - template: Security/Container-Scanning.gitlab-ci.yml
#  - template: Code-Quality.gitlab-ci.yml
#  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
#  - template: Security/SAST.gitlab-ci.yml
#  - template: Jobs/SAST-IaC.gitlab-ci.yml
#  - template: Jobs/Secret-Detection.gitlab-ci.yml
#  - template: Security/License-Scanning.gitlab-ci.yml

java-test:
  stage: test
  script:
    - mvn verify
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    expose_as: 'JaCoCo'
    paths:
        - target/site/jacoco/
    reports:
        metrics: target/site/jacoco/jacoco.csv
  coverage: '/\d+.\d+ \% covered/'
      
pages:
  stage: deploy
  dependencies:
    - java-test
  script:
    - echo "CI_PIPELINE_SOURCE is " $CI_PIPELINE_SOURCE
    - mkdir public
    - mv target/site/jacoco/* public
  artifacts:
    paths:
      - public

deploy_production:
  stage: deploy
  script:
    - echo "Deploying to production..."
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
